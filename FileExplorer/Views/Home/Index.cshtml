@model FileExplorer.Models.FileNode
@{
    ViewData["Title"] = "Explorador de Archivos UABC";
}

<div class="container-fluid">
    <div class="row flex-nowrap position-relative" style="min-height: 100vh;">
        <div id="sidebar-panel" class="col-md-3 bg-light p-3 position-relative">
            <button id="toggle-sidebar" class="btn btn-outline-secondary btn-sm position-absolute"
                    style="top: 10px; right: 10px; z-index: 1051;"
                    type="button" title="Ocultar explorador">
                <i class="bi bi-chevron-left"></i>
            </button>
            <h4>Explorador de Archivos UABC</h4>
            <div id="file-tree" class="mt-3">
                @await Html.PartialAsync("_FileTreePartial", Model)
            </div>
        </div>
        <div id="sidebar-placeholder" class="d-none d-flex align-items-center justify-content-center" style="width:48px; min-width:48px; max-width:48px;">
            <button id="show-sidebar-tab" class="btn btn-outline-secondary btn-sm"
                    type="button" title="Mostrar explorador">
                <i class="bi bi-chevron-right"></i>
            </button>
        </div>
        <div id="main-panel" class="col-md-9 p-3 flex-grow-1">
            <div id="file-content" class="border p-3">

                <div class="d-flex justify-content-end mb-2">
                    @* Botones para agregar en la esquina superior derecha *@
                    <button id="add-materia-btn" class="btn btn-success me-2" style="display:none;">
                        <i class="bi bi-plus"></i> Materia 
                    </button>
                    <button id="add-contenido-btn" class="btn btn-primary" style="display:none;">
                        <i class="bi bi-plus"></i> Contenido
                    </button>
                    <button id="add-recurso-btn" class="btn btn-info" style="display:none;">
                        <i class="bi bi-plus"></i> Recurso
                    </button>`
                </div>
                <h3 id="current-path">UABC</h3>
                <div id="breadcrumb" class="mb-3">
                    <nav aria-label="breadcrumb">
                        <ol class="breadcrumb">
                            <li class="breadcrumb-item active" aria-current="page">UABC</li>
                        </ol>
                    </nav>
                </div>
                <div id="folder-contents" class="row">
                    @foreach (var child in Model.Children)
                    {
                        <div class="col-md-3 mb-3">
                            <div class="card folder-card position-relative" data-path="@child.Path">
                                <div class="card-body text-center">
                                    @* Botón de borrar en la esquina superior derecha *@
                                    @if (!child.IsDirectory ||
                                        (child.IsDirectory && (
                                            (child.Children != null && child.Children.Count > 0 && child.Children.All(c => !c.IsDirectory))
                                            || (child.Children == null || child.Children.Count == 0)
                                        )))
                                    {
                                        <button class="btn btn-link btn-sm text-danger delete-node position-absolute top-0 end-0 mt-1 me-1" data-path="@child.Path" title="Eliminar">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    }
                                    <i class="bi bi-folder-fill text-warning" style="font-size: 2rem;"></i>
                                    <p class="mt-2 mb-0">@child.Name</p>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
    <!-- Modal para agregar Materia/Contenido -->
    <div class="modal fade" id="addModal" tabindex="-1" aria-labelledby="addModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form id="addForm">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addModalLabel">Agregar</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                    </div>
                    <div class="modal-body" id="addModalBody">
                        <!-- Aquí se inyecta el formulario dinámicamente -->
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                        <button type="submit" class="btn btn-primary">Guardar</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    <!-- Modal para mostrar video de YouTube -->
    <div class="modal fade" id="youtubeModal" tabindex="-1" aria-labelledby="youtubeModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg modal-dialog-centered">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="youtubeModalLabel">Video de YouTube</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body p-0" style="height: 60vh;">
                    <iframe id="youtubeIframe" width="100%" height="100%" frameborder="0"
                            allow="autoplay; encrypted-media" allowfullscreen></iframe>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Manejar clic en carpetas en el panel principal
            $(document).on('click', '.folder-card', function() {
                const path = $(this).data('path');
                loadFolderContents(path);
            });

            // Manejar clic en nodos del árbol
            $(document).on('click', '.tree-toggle', function(e) {
                e.preventDefault();
                const $this = $(this);
                const $parent = $this.parent();
                const $icon = $this.find('i');
                const $children = $parent.find('> ul');

                if ($children.is(':visible')) {
                    $children.hide();
                    $icon.removeClass('bi-chevron-down').addClass('bi-chevron-right');
                } else {
                    $children.show();
                    $icon.removeClass('bi-chevron-right').addClass('bi-chevron-down');
                }
            });

            // Manejar clic en el nombre de la carpeta en el árbol
            $(document).on('click', '.folder-name', function(e) {
                e.preventDefault();
                const path = $(this).data('path');
                loadFolderContents(path);
            });



        $(document).ready(function () {
            $('#toggle-sidebar').on('click', function () {
                $('#sidebar-panel').addClass('d-none');
                $('#sidebar-placeholder').removeClass('d-none');
                $('#main-panel').removeClass('col-md-9').addClass('flex-grow-1').css('width', 'auto');
            });

            $('#show-sidebar-tab').on('click', function () {
                $('#sidebar-panel').removeClass('d-none');
                $('#sidebar-placeholder').addClass('d-none');
                $('#main-panel').removeClass('flex-grow-1').css('width', '').addClass('col-md-9');
            });
        });


                    // Mostrar botones "+" solo en nivel de materia o contenido
        function updateAddButtons(path) {
            const parts = path.split('/').filter(p => p);
            $('#add-materia-btn').hide();
            $('#add-contenido-btn').hide();
            $('#add-recurso-btn').hide();
            if (parts.length === 5) { // Semestre
                $('#add-materia-btn').show();
            } else if (parts.length === 6) { // Materia
                $('#add-contenido-btn').show();
            } else if (parts.length === 7) { // Contenido
                $('#add-recurso-btn').show();
            }
        }

        // Llama a updateAddButtons en cada navegación
                function loadFolderContents(path, pushState = true) {
            const parts = path.split('/').filter(p => p);
            // Si es un contenido (nivel 7), mostrar recursos
            if (parts.length === 7) {
                loadRecursosContenido(path);
                updateAddButtons(path);
                if (pushState) {
                    history.pushState({ path: path }, '', '?path=' + encodeURIComponent(path));
                }
                updateBreadcrumb(path);
                return;
            }

            // Si no, mostrar carpetas/hijos normalmente
            $.ajax({
                url: '/Home/GetFolderContents',
                type: 'GET',
                data: { path: path },
                success: function(data) {
                    updateBreadcrumb(path);
                    updateFolderContents(data);
                    updateAddButtons(path);
                    if (pushState) {
                        history.pushState({ path: path }, '', '?path=' + encodeURIComponent(path));
                    }
                },
                error: function() {
                    alert('Error al cargar el contenido de la carpeta');
                }
            });
        }

        // Mostrar modal para agregar Materia
        $('#add-materia-btn').on('click', function() {
            $('#addModalLabel').text('Agregar Materia');
            $('#addModalBody').html(`
                <div class="mb-3">
                    <label class="form-label">Nombre de la materia</label>
                    <input type="text" class="form-control" name="Nombre" required />
                </div>
                <input type="hidden" name="SemestrePath" value="${getCurrentPath()}" />
            `);
            $('#addForm').attr('data-type', 'materia');
            var modal = new bootstrap.Modal(document.getElementById('addModal'));
            modal.show();
        });

        // Mostrar modal para agregar Contenido
        $('#add-contenido-btn').on('click', function() {
            $('#addModalLabel').text('Agregar Contenido');
            $('#addModalBody').html(`
                <div class="mb-3">
                    <label class="form-label">Número</label>
                    <input type="text" class="form-control" name="Numero" required placeholder="Ejemplo 2.4" />
                </div>
                <div class="mb-3">
                    <label class="form-label">Título</label>
                    <input type="text" class="form-control" name="Titulo" required />
                </div>
                <input type="hidden" name="MateriaPath" value="${getCurrentPath()}" />
            `);
            $('#addForm').attr('data-type', 'contenido');
            var modal = new bootstrap.Modal(document.getElementById('addModal'));
            modal.show();
        });

                // Mostrar modal para agregar Recurso
        $('#add-recurso-btn').on('click', function() {
            // Cargar tipos de archivo por AJAX
            $.get('/Home/GetTiposArchivo', function(tipos) {
                let options = tipos.map(t => `<option value="${t.id}">${t.nombre} (${t.extension})</option>`).join('');
                $('#addModalLabel').text('Agregar Recurso');
                $('#addModalBody').html(`
                    <div class="mb-3">
                        <label class="form-label">Nombre</label>
                        <input type="text" class="form-control" name="Nombre" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">URL
                            <a tabindex="0" class="ms-1 info-icon" role="button"
                               data-bs-toggle="popover"
                               data-bs-trigger="manual"
                               data-bs-placement="right"
                               title="Soporte de URL's'"
                               data-bs-content="Ingresa la URL completa de donde tengas alojado tu recurso o de algun video o pagina web, por ejemplo: https://www.ejemplo.com/archivo.pdf">
                                <i class="bi bi-info-circle text-secondary"></i>
                            </a>
                        </label>
                        <input type="url" class="form-control" name="Url" required placeholder="https://..." />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Tipo de archivo</label>
                        <select class="form-select" name="TipoArchivoId" required>
                            <option value="">Selecciona un tipo</option>
                            ${options}
                        </select>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Descripción</label>
                        <textarea class="form-control" name="Descripcion" rows="2"></textarea>
                    </div>
                    <input type="hidden" name="ContenidoPath" value="${getCurrentPath()}" />
                `);
                $('#addForm').attr('data-type', 'recurso');
                var modal = new bootstrap.Modal(document.getElementById('addModal'));
                modal.show();

                // Inicializar popover de Bootstrap para el icono de info
                setTimeout(function() {
                    var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
                    popoverTriggerList.forEach(function (popoverTriggerEl) {
                        new bootstrap.Popover(popoverTriggerEl);
                    });
                }, 100);
            });
        });

        // Manejar el submit del formulario del modal (agrega el caso 'recurso')
        $('#addForm').on('submit', function(e) {
            e.preventDefault();
            const type = $(this).attr('data-type');
            const data = $(this).serialize();
            let url = '';
            if (type === 'materia') {
                url = '/Home/AddMateria';
            } else if (type === 'contenido') {
                url = '/Home/AddContenido';
            } else if (type === 'recurso') {
                url = '/Home/AddRecursoContenido';
            }
            $.ajax({
                url: url,
                type: 'POST',
                data: data,
                success: function() {
                    $('#addModal').modal('hide');
                    if (type === 'recurso') {
                        loadRecursosContenido(getCurrentPath());
                    } else {
                        loadFolderContents(getCurrentPath());
                        reloadFileTree();
                    }
                },
                error: function() {
                    alert('Error al agregar');
                }
            });
        });

        // Obtener el path actual desde la URL
        function getCurrentPath() {
            return new URLSearchParams(window.location.search).get('path') || '/UABC';
        }



            function updateBreadcrumb(path) {
                const parts = path.split('/').filter(p => p);
                let breadcrumb = '<ol class="breadcrumb">';
                let currentPath = '';

                breadcrumb += '<li class="breadcrumb-item"><a href="#" data-path="/UABC">UABC</a></li>';

                for (let i = 1; i < parts.length; i++) {
                    currentPath += '/' + parts[i];
                    if (i === parts.length - 1) {
                        breadcrumb += `<li class="breadcrumb-item active" aria-current="page">${parts[i]}</li>`;
                    } else {
                        breadcrumb += `<li class="breadcrumb-item"><a href="#" data-path="/UABC${currentPath}">${parts[i]}</a></li>`;
                    }
                }

                breadcrumb += '</ol>';
                $('#breadcrumb').html(breadcrumb);
                $('#current-path').text(parts[parts.length - 1] || 'UABC');
            }

            function updateFolderContents(contents) {
                let html = '';

                contents.forEach(function(item) {
                    html += `
                        <div class="col-md-3 mb-3">
                            <div class="card folder-card position-relative" data-path="${item.path}">
                                <div class="card-body text-center">
                                    ${!item.isDirectory ||
                                        (item.isDirectory && (
                                            (item.children && item.children.length > 0 && item.children.every(c => !c.isDirectory)) ||
                                            !item.children || item.children.length === 0
                                        ))
                                        ? `<button class="btn btn-link btn-sm text-danger delete-node position-absolute top-0 end-0 mt-1 me-1" data-path="${item.path}" title="Eliminar">
                                            <i class="bi bi-trash"></i>
                                           </button>`
                                        : ''
                                    }
                                    <i class="bi bi-folder-fill text-warning" style="font-size: 2rem;"></i>
                                    <p class="mt-2 mb-0">${item.name}</p>
                                </div>
                            </div>
                        </div>
                    `;
                });

                $('#folder-contents').html(html);
            }

            // Manejar clics en el breadcrumb
            $(document).on('click', '#breadcrumb a', function(e) {
                e.preventDefault();
                const path = $(this).data('path');
                loadFolderContents(path);
            });

            // Al cargar la página, si hay un path en la URL, cargarlo
            const urlParams = new URLSearchParams(window.location.search);
            const initialPath = urlParams.get('path');
            if (initialPath && initialPath !== '/UABC') {
                loadFolderContents(initialPath);
            }
        });

        $(document).on('click', '.delete-node', function(e) {
            e.stopPropagation();
            const path = $(this).data('path');
            if (confirm('¿Seguro que deseas eliminar este elemento?')) {
                $.ajax({
                    url: '/Home/DeleteNode',
                    type: 'POST',
                    data: { path: path },
                    success: function() {
                        // Actualiza el panel derecho y el árbol lateral SIEMPRE
                        loadFolderContents(getCurrentPath());
                        reloadFileTree();
                    },
                    error: function() {
                        alert('Error al eliminar el elemento');
                    }
                });
            }
        });


                // Defínela aquí, fuera de cualquier función o bloque
        function getCurrentPath() {
            return new URLSearchParams(window.location.search).get('path') || '/UABC';
        }
                // Eliminar recurso desde la card
        $(document).on('click', '.delete-recurso', function(e) {
            e.preventDefault(); 
            e.stopPropagation();
            const recursoId = $(this).data('id');
            const currentPath = getCurrentPath();
            if (confirm('¿Seguro que deseas eliminar este recurso?')) {
                $.ajax({
                    url: '/Home/DeleteRecursoContenido',
                    type: 'POST',
                    data: { id: recursoId },
                    success: function() {
                        loadRecursosContenido(currentPath);
                    },
                    error: function() {
                        alert('Error al eliminar el recurso');
                    }
                });
            }
        });

        function reloadFileTree() {
            $.ajax({
                url: '/Home/FileTreePartial',
                type: 'GET',
                success: function (html) {
                    $('#file-tree').html(html);
                }
            });
        }

        window.onpopstate = function(event) {
            let path = '/UABC';
            if (event.state && event.state.path) {
                path = event.state.path;
            } else {
                // Si no hay estado, intenta obtener el path de la URL
                const urlParams = new URLSearchParams(window.location.search);
                path = urlParams.get('path') || '/UABC';
            }
            loadFolderContents(path, false);
        };

        function loadRecursosContenido(path) {
            $.ajax({
                url: '/Home/GetRecursosContenido',
                type: 'GET',
                data: { path: path },
                success: function(data) {
                    let html = '';
                    if (data.length > 0) {
                        html += '<div class="row">';
                        data.forEach(function(r, idx) {
                            const iconClass = getIconByTipo(r.tipo);
                            const desc = r.descripcion ? r.descripcion.replace(/"/g, '&quot;') : 'Sin descripción';
                            const fecha = r.fecha ? new Date(r.fecha).toLocaleDateString('es-MX') : 'Sin fecha';
                            const url = r.url || '#';
                            const urlTrunc = url.length > 30 ? url.substring(0, 30) + '...' : url;
                            let isYoutube = (r.tipo && r.tipo.toLowerCase().includes('video en línea')) &&
                                (r.url && r.url.match(/^(https?:\/\/)?(www\.)?(youtube\.com|youtu\.be)\//i));
                            html += `
                                <div class="col-md-3 mb-3">
                                    <div class="card h-100 recurso-card position-relative">
                                        <span class="position-absolute top-0 start-0 m-2">
                                            <a tabindex="0" class="info-icon" role="button"
                                               data-bs-toggle="popover"
                                               data-bs-trigger="focus"
                                               data-bs-placement="right"
                                               title="Información"
                                               data-bs-html="true"
                                               data-bs-content="<strong>Descripción:</strong> ${desc}<br/><strong>Fecha:</strong> ${fecha}<br/><strong>URL:</strong> <span class='url-trunc' title='${url}'>${urlTrunc}</span> <a href='#' class='copy-url' data-url='${url}' tabindex='-1' title='Copiar URL'><i class='bi bi-clipboard ms-1'></i></a>">
                                                <i class="bi bi-info-circle text-secondary"></i>
                                            </a>
                                        </span>
                                        <button class="btn btn-link btn-sm text-danger delete-recurso position-absolute top-0 end-0 mt-1 me-1" data-id="${r.id}" title="Eliminar recurso">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                        <div class="card-body text-center">
                                            ${
                                                isYoutube
                                                ? `<a href="#" class="open-youtube" data-url="${r.url}" data-nombre="${r.nombre.replace(/"/g, '&quot;')}" title="Ver video de YouTube">
                                                       <i class="bi bi-youtube text-danger" style="font-size:2.5rem;"></i>
                                                   </a>`
                                                : `<a href="${r.url}" target="_blank" title="Abrir recurso">
                                                       <i class="bi ${iconClass}" style="font-size:2.5rem;"></i>
                                                   </a>`
                                            }
                                            <h6 class="mt-2 mb-1 text-truncate" title="${r.nombre}">
                                                <a href="${r.url}" target="_blank" class="text-decoration-none">${r.nombre}</a>
                                            </h6>
                                            <span class="badge bg-light text-dark d-block text-truncate" style="max-width: 100%; width: 100%;" title="${r.tipo || ''}">
                                                ${r.tipo || ''}
                                            </span>
                                        </div>
                                    </div>
                                </div>
                            `;
                        });
                        html += '</div>';
                    } else {
                        html = '<div class="alert alert-info">No hay recursos para este contenido.</div>';
                    }
                    $('#folder-contents').html(html);

                            // Inicializar popovers de Bootstrap
                    var popoverTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="popover"]'));
                    popoverTriggerList.forEach(function (popoverTriggerEl) {
                        new bootstrap.Popover(popoverTriggerEl);
                    });

                    // Manejar apertura/cierre manual del popover
                    $(document).off('click', '.info-icon').on('click', '.info-icon', function (e) {
                        e.preventDefault();
                        e.stopPropagation();
                        var $this = $(this);
                        $('[data-bs-toggle="popover"]').not($this).each(function () {
                            var pop = bootstrap.Popover.getInstance(this);
                            if (pop) pop.hide();
                        });
                        var popover = bootstrap.Popover.getOrCreateInstance(this);
                        if ($this.attr('aria-describedby')) {
                            popover.hide();
                        } else {
                            popover.show();
                        }
                    });

                    // Cierra el popover si se hace clic fuera
                    $(document).off('click.popover-close').on('click.popover-close', function (e) {
                        if (!$(e.target).closest('.popover, .info-icon').length) {
                            $('[data-bs-toggle="popover"]').each(function () {
                                var pop = bootstrap.Popover.getInstance(this);
                                if (pop) pop.hide();
                            });
                        }
                    });

                    // Evento de copiar dentro del popover
                    $(document).off('click', '.popover .copy-url').on('click', '.popover .copy-url', function (ev) {
                        ev.preventDefault();
                        ev.stopPropagation();
                        const url = $(this).data('url');
                        navigator.clipboard.writeText(url).then(function () {
                            $(ev.target).closest('.copy-url').find('i').removeClass('bi-clipboard').addClass('bi-clipboard-check');
                            setTimeout(() => {
                                $(ev.target).closest('.copy-url').find('i').removeClass('bi-clipboard-check').addClass('bi-clipboard');
                            }, 1200);
                        });
                    });
                }
            });
        }

                // Evento para abrir el modal de YouTube
        $(document).on('click', '.open-youtube', function(e) {
            e.preventDefault();
            const url = $(this).data('url');
            const nombre = $(this).data('nombre') || 'Video de YouTube';
            const videoId = getYoutubeId(url);
            if (videoId) {
                const embedUrl = `https://www.youtube.com/embed/${videoId}?autoplay=1`;
                $('#youtubeIframe').attr('src', embedUrl);
                $('#youtubeModalLabel').text(nombre);
                var modal = new bootstrap.Modal(document.getElementById('youtubeModal'));
                modal.show();
            }
        });

        // Limpiar el iframe al cerrar el modal
        $('#youtubeModal').on('hidden.bs.modal', function () {
            $('#youtubeIframe').attr('src', '');
        });

        // Función para extraer el ID de YouTube
        function getYoutubeId(url) {
            // Soporta youtube.com/watch?v= y youtu.be/
            const regExp = /(?:youtube\.com\/.*v=|youtu\.be\/)([^&?/]+)/;
            const match = url.match(regExp);
            return match ? match[1] : null;
        }

        function getIconByTipo(tipo) {
            switch ((tipo || '').toLowerCase()) {
                case 'documento pdf':
                    return 'bi-file-earmark-pdf text-danger';
                case 'presentación powerpoint':
                    return 'bi-file-earmark-slides text-warning';
                case 'documento word':
                    return 'bi-file-earmark-word text-primary';
                case 'video mp4':
                    return 'bi-file-earmark-play text-info';
                case 'imagen jpeg':
                    return 'bi-file-earmark-image text-success';
                case 'video en línea (youtube, vimeo, etc.)':
                    return 'bi-youtube'; // O usa otro icono si prefieres
                case 'recurso web':
                    return 'bi-globe text-primary';
                default:
                    return 'bi-file-earmark text-secondary';
            }
        }


    </script>
}


